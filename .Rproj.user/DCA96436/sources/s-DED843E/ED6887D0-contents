#survreg
require(survival)

#数据准备
#1. data preparation
library(survival) # to fit a Cox model
library(randomForestSRC) # to fit an RSF model
library(SurvMetrics) # to get all the metrics
library(pec) # to make predictions based on Cox model
set.seed(1)
mydata <- kidney[, -1]
train_index <- sample(1:nrow(mydata), 0.7 * nrow(mydata))
train_data <- mydata[train_index, ]
test_data <- mydata[-train_index, ]
Cindex(fit_cox, test_data)
Cindex(fit_rsf, test_data)


fit_survreg  <- survreg(Surv(time,status) ~ .,dist='gaussian', data=train_data)


p_time = predict(fit_survreg, test_data, "linear")
p_time

p_time = predict(fit_survreg, test_data, type = 'quantile', p = seq(0.01,0.99,0.01))
p_time

object = fit_survreg
sp_matrix = test_data
IBSrange = c(-2,-1)







lung$time
test_data$time

require(survival)
s <- with(lung,Surv(time,status))

sWei  <- survreg(s ~ .,dist='weibull',data=lung)
predict(sWei, lung, "linear")
fitKM <- survfit(s ~ sex,data=lung)
plot(fitKM)
class(fit_survreg)


predict(sWei, lung, type = "linear")


lines(predict(sWei, lung,
              type = "linear",
              p = seq(.01, .99, by = .01)),
      seq(.99, .01, by =-.01),
      col = "blue")

lines(predict(sWei, newdata = list(sex      = 2,
                                   age      = 1,
                                   ph.ecog  = 1,
                                   ph.karno = 90,
                                   wt.loss  = 2),
              type = "quantile",
              p    = seq(.01, .99, by = .01)),
      seq(.99, .01, by        =-.01),
      col = "red")









survreg.predictSurvProb <- function(object, newdata, times){
  shape <- 1/object$scale # also equals 1/exp(fit$icoef[2])
  lps <- predict(object, newdata = newdata, type ="lp")
  surv <- t(sapply(lps, function(lp){
    sapply(times, function(t) 1 - pweibull(t, shape = shape, scale = exp(lp)))
  }))

  return(surv)
}

sWei <- survreg(s ~ as.factor(sex),dist='weibull',data=lung)
times <- seq(min(lung$time), max(lung$time), length.out = 1000)
new_dat <- data.frame(sex = c(1,2))
surv <- survreg.predictSurvProb(sWei, newdata = new_dat, times = times)

lines(times, surv[1, ],col='red')
lines(times, surv[2, ],col='red')














